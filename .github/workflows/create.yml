name: Create vdisks with rootfs

on:
  workflow_dispatch:
    inputs:
      noLogs:
        description: "Delete releases,tags,workflowRuns?"
        required: true
        type: string
        default: "false"


permissions:
  contents: write # Give permission to put the release into the repo
  actions: write # Give permission to delete workflow runs

jobs:
  ClearReleasesTagsWorkflowlogs:
    if: ${{ github.event.inputs.noLogs == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete all releases
        run: |
          gh release list --limit 1000 | awk '{print $1}' | while read tag; do
            echo "Deleting release: $tag"
            gh release delete "$tag" -y || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete all tags
        run: |
          git fetch --tags
          git ls-remote --tags origin | awk '{print $2}' | sed 's|refs/tags/||' | while read tag; do
            echo "Deleting tag: $tag"
            git push origin --delete "$tag" || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0

  CreateUbuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          sudo rm /var/lib/man-db/auto-update
          sudo apt update && sudo apt install debootstrap qemu-kvm -y
        shell: bash

      - name: Download rootfs
        id: download
        run: |
          mkdir -p /tmp/kvm-virt/rootfs
          sudo debootstrap --arch=amd64 noble /tmp/kvm-virt/rootfs http://archive.ubuntu.com/ubuntu/
        shell: bash

      - name: Create vdisk
        id: vdisk
        run: |
          qemu-img create -f qcow2 /tmp/kvm-virt/disk-template.qcow2 10G
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo parted /dev/nbd0 mklabel msdos
          sudo parted /dev/nbd0 mkpart primary ext4 1MiB 100%
          sudo mkfs.ext4 /dev/nbd0p1
          sudo mount /dev/nbd0p1 /mnt
          sudo mv /tmp/kvm-virt/rootfs/* /mnt/
          sudo umount /mnt
          sudo qemu-nbd --disconnect /dev/nbd0
          rm -rf /tmp/kvm-virt/rootfs
        shell: bash

      - name: Configure rootfs
        id: configure
        run: |
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo mount /dev/nbd0p1 /mnt
          sudo mount --bind /dev /mnt/dev
          sudo mount --bind /proc /mnt/proc
          sudo mount --bind /sys /mnt/sys
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu noble main restricted universe multiverse' > /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu noble-updates main restricted universe multiverse' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu noble-security main restricted universe multiverse' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu noble-backports main universe restricted multiverse' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "apt update && apt full-upgrade -y && apt install sudo linux-image-generic grub-pc-bin grub2-common grub-pc curl wget nano -y && apt autoremove -y && apt clean"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'virt' > /etc/hostname"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo '127.0.0.1 localhost virt' > /etc/hosts"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo '/dev/vda1 / ext4 defaults,noatime 0 1' > /etc/fstab"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'root:000' | chpasswd"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "useradd -m -G sudo -s /bin/bash vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'vuser ALL=(ALL) ALL' >> /etc/sudoers.d/vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "chmod 0440 /etc/sudoers.d/vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'vuser:000' | chpasswd"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "passwd -l root"
          echo "[Match]" | sudo tee /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Name=ens3" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "[Network]" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Address=10.0.2.15/24" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Gateway=10.0.2.2" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "DNS=8.8.8.8" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "systemctl enable systemd-networkd systemd-resolved"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "grub-install --target=i386-pc /dev/nbd0"
          echo "GRUB_TIMEOUT=0" | sudo tee /mnt/etc/default/grub
          echo "GRUB_TERMINAL=serial" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_SERIAL_COMMAND='serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1'" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_CMDLINE_LINUX_DEFAULT='console=ttyS0'" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_DISABLE_OS_PROBER=true" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_DISABLE_RECOVERY=true" | sudo tee -a /mnt/etc/default/grub
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "update-grub"
          sudo umount /mnt/{sys,proc,dev}
          sudo umount /mnt && sudo qemu-nbd --disconnect /dev/nbd0
        shell: bash

      - name: Shrink vdisk size
        id: shrink
        run: |
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo mount /dev/nbd0p1 /mnt
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "rm -rf /var/log/*"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "dd if=/dev/zero of=zerofile bs=1M || true && rm zerofile"
          sudo umount /mnt && sudo qemu-nbd --disconnect /dev/nbd0
          mv /tmp/kvm-virt/disk-template.qcow2 /tmp/kvm-virt/temp.qcow2
          qemu-img convert -O qcow2 /tmp/kvm-virt/temp.qcow2 $PWD/UbNoble.qcow2
          rm /tmp/kvm-virt/temp.qcow2
        shell: bash

  CreateDebian:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          sudo rm /var/lib/man-db/auto-update
          sudo apt update && sudo apt install debootstrap qemu-kvm -y
        shell: bash

      - name: Download rootfs
        id: download
        run: |
          mkdir -p /tmp/kvm-virt/rootfs
          sudo debootstrap --arch=amd64 testing /tmp/kvm-virt/rootfs http://deb.debian.org/debian/
        shell: bash

      - name: Create vdisk
        id: vdisk
        run: |
          qemu-img create -f qcow2 /tmp/kvm-virt/disk-template.qcow2 10G
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo parted /dev/nbd0 mklabel msdos
          sudo parted /dev/nbd0 mkpart primary ext4 1MiB 100%
          sudo mkfs.ext4 /dev/nbd0p1
          sudo mount /dev/nbd0p1 /mnt
          sudo mv /tmp/kvm-virt/rootfs/* /mnt/
          sudo umount /mnt
          sudo qemu-nbd --disconnect /dev/nbd0
          rm -rf /tmp/kvm-virt/rootfs
        shell: bash

      - name: Configure rootfs
        id: configure
        run: |
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo mount /dev/nbd0p1 /mnt
          sudo mount --bind /dev /mnt/dev
          sudo mount --bind /proc /mnt/proc
          sudo mount --bind /sys /mnt/sys
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://deb.debian.org/debian/ testing main contrib non-free non-free-firmware' > /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://security.debian.org/debian-security testing-security main contrib non-free non-free-firmware' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "apt update && apt full-upgrade -y && apt install sudo linux-image-generic grub-pc-bin grub2-common grub-pc curl wget nano -y && apt autoremove -y && apt clean"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'virt' > /etc/hostname"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo '127.0.0.1 localhost virt' > /etc/hosts"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo '/dev/vda1 / ext4 defaults,noatime 0 1' > /etc/fstab"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'root:000' | chpasswd"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "useradd -m -G sudo -s /bin/bash vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'vuser ALL=(ALL) ALL' >> /etc/sudoers.d/vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "chmod 0440 /etc/sudoers.d/vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'vuser:000' | chpasswd"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "passwd -l root"
          echo "[Match]" | sudo tee /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Name=ens3" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "[Network]" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Address=10.0.2.15/24" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Gateway=10.0.2.2" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "DNS=8.8.8.8" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "systemctl enable systemd-networkd systemd-resolved"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "grub-install --target=i386-pc /dev/nbd0"
          echo "GRUB_TIMEOUT=0" | sudo tee /mnt/etc/default/grub
          echo "GRUB_TERMINAL=serial" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_SERIAL_COMMAND='serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1'" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_CMDLINE_LINUX_DEFAULT='console=ttyS0'" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_DISABLE_OS_PROBER=true" | sudo tee -a /mnt/etc/default/grub
          echo "GRUB_DISABLE_RECOVERY=true" | sudo tee -a /mnt/etc/default/grub
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "update-grub"
          sudo umount /mnt/{sys,proc,dev}
          sudo umount /mnt && sudo qemu-nbd --disconnect /dev/nbd0
        shell: bash

      - name: Shrink vdisk size
        id: shrink
        run: |
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo mount /dev/nbd0p1 /mnt
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "rm -rf /var/log/*"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "dd if=/dev/zero of=zerofile bs=1M || true && rm zerofile"
          sudo umount /mnt && sudo qemu-nbd --disconnect /dev/nbd0
          mv /tmp/kvm-virt/disk-template.qcow2 /tmp/kvm-virt/temp.qcow2
          qemu-img convert -O qcow2 /tmp/kvm-virt/temp.qcow2 $PWD/DebTesting.qcow2
          rm /tmp/kvm-virt/temp.qcow2
        shell: bash
