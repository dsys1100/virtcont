name: Create vdisk with rootfs

on:
  schedule:
    - cron: '0 0 * * 4' # Start every Thursday

permissions:
  contents: write # Give permission to put the release into the repo
  actions: write # Give permission to delete workflow runs

env:
  CODENAME: noble
  SIZE: 10G

jobs:
  CreateVdiskWithRootfs-AUTO:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          sudo rm /var/lib/man-db/auto-update
          sudo apt update && sudo apt install debootstrap qemu-kvm -y
        shell: bash

      - name: Download rootfs
        id: download
        run: |
          mkdir -p /tmp/kvm-virt/rootfs
          sudo debootstrap --arch=amd64 ${{ env.SIZE }} /tmp/kvm-virt/rootfs http://archive.ubuntu.com/ubuntu/
        shell: bash

      - name: Configure rootfs
        id: configure
        run: |
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu $(cat /etc/os-release | grep UBUNTU_CODENAME | cut -d = -f 2) main restricted universe multiverse' > /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu $(cat /etc/os-release | grep UBUNTU_CODENAME | cut -d = -f 2)-updates main restricted universe multiverse' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu $(cat /etc/os-release | grep UBUNTU_CODENAME | cut -d = -f 2)-security main restricted universe multiverse' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'deb http://archive.ubuntu.com/ubuntu $(cat /etc/os-release | grep UBUNTU_CODENAME | cut -d = -f 2)-backports main universe restricted multiverse' >> /etc/apt/sources.list"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "apt update && apt full-upgrade -y && apt autoremove -y && apt-get clean"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'virt' > /etc/hostname"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo '127.0.0.1 localhost virt' > /etc/hosts"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo '/dev/vda1 / ext4 defaults,noatime 0 1' > /etc/fstab"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'root:000' | chpasswd"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "useradd -m -G sudo -s /bin/bash vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'vuser ALL=(ALL) ALL' >> /etc/sudoers.d/vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "chmod 0440 /etc/sudoers.d/vuser"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "echo 'vuser:000' | chpasswd"
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "passwd -l root"
          echo "[Match]" | sudo tee /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Name=ens3" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "[Network]" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Address=10.0.2.15/24" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "Gateway=10.0.2.2" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          echo "DNS=8.8.8.8" | sudo tee -a /tmp/kvm-virt/rootfs/etc/systemd/network/20-ens3.network
          sudo chroot /tmp/kvm-virt/rootfs /bin/bash -c "systemctl enable systemd-networkd && systemctl enable systemd-resolved"
        shell: bash

      - name: Create rootfs.tar
        id: tar
        run: |
          sudo tar -cp -f rootfs.tar -C /tmp/kvm-virt rootfs
        shell: bash

      - name: Create vdisk
        id: vdisk
        run: |
          qemu-img create -f qcow2 /tmp/kvm-virt/disk-template.qcow2 {{ env.SIZE }}
          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 /tmp/kvm-virt/disk-template.qcow2
          sudo parted /dev/nbd0 mklabel msdos
          sudo parted /dev/nbd0 mkpart primary ext4 1MiB 100%
          sudo mkfs.ext4 /dev/nbd0p1
          sudo mount /dev/nbd0p1 /mnt
          sudo mv /tmp/kvm-virt/rootfs/* /mnt/
          sudo umount /mnt
          sudo qemu-nbd --disconnect /dev/nbd0
          rm -rf /tmp/kvm-virt/rootfs
        shell: bash

      - name: Move final files
        id: move
        run: |
          mv /tmp/kvm-virt/disk-template.qcow2 $PWD/${{ env.CODENAME }}.qcow2
          mv rootfs.tar ${{ env.CODENAME }}.tar
        shell: bash

      - name: Create Release Info
        run: |
          echo "Ubuntu codename: ${{ env.CODENAME }}" > release_body.txt
          echo "Virtual disk size: {{ env.SIZE }}" >> release_body.txt
        shell: bash

      - name: Create Git Tag and Release with unique name
        id: vars
        run: |
          echo "tag_name=Rootfs-AUTO-$(date +'%Y%m%d-%H%M%S'-UTC)" >> "$GITHUB_OUTPUT"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.vars.outputs.tag_name }}
          git push origin ${{ steps.vars.outputs.tag_name }}
        shell: bash

      - name: Upload Release
        uses: softprops/action-gh-release@master
        with:
          files: |
            *.tar
            *.qcow2
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: ${{ steps.vars.outputs.tag_name }}
          draft: false
          prerelease: false
          body_path: release_body.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
